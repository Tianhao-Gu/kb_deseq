/*
A KBase module: kb_deseq
*/

module kb_deseq {

    /* A boolean - 0 for false, 1 for true.
        @range (0, 1)
    */
    typedef int boolean;

    /* An X/Y/Z style reference
    */
    typedef string obj_ref;

    /*
      required params:
      expressionset_ref: ExpressionSet object reference
      differential_expression_set_suffix: DifferentialExpressoinMatrixSet object suffix
      workspace_name: the name of the workspace it gets saved to

      optional params:
      run_all_combinations: run all paired condition combinations
      condition_labels: conditions for expression set object
      alpha_cutoff: q value cutoff
      fold_change_cutoff: fold change cutoff
      input_type: one of ["genes", "transcripts"]
      num_threads: number of threads
      fold_scale_type: one of ["linear", "log2+1", "log10+1"]
      
    */
    typedef structure{
        obj_ref expressionset_ref;
        string differential_expression_set_suffix;
        string workspace_name;

        boolean run_all_combinations;
        list<string> condition_labels;  
        float alpha_cutoff;
        float fold_change_cutoff;
        string input_type;
        int num_threads;
        string fold_scale_type;
    } DESeqInput;

    /*
        result_directory: folder path that holds all files generated by run_deseq2_app
        diff_expression_obj_ref: generated RNASeqDifferetialExpression object reference
        report_name: report name generated by KBaseReport
        report_ref: report reference generated by KBaseReport
    */
    typedef structure{
        string result_directory;
        obj_ref diff_expression_obj_ref;
        string report_name;
        string report_ref;
    }DESeqResult;

    /*  
        run_deseq2_app: run DESeq2 app

        ref: https://www.bioconductor.org/packages/release/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
    */
    funcdef run_deseq2_app(DESeqInput params)
        returns (DESeqResult returnVal) authentication required;
};
